name: Deploy Node.js App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
  uses: actions/setup-node@v3
  with:
    node-version: 18

- name: Configure npm to use Nexus
  run: |
    echo "//$(echo ${{ secrets.NEXUS_REGISTRY }} | sed 's|https\?://||'):_auth=$(echo -n '${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }}' | base64)" > .npmrc
    echo "registry=${{ secrets.NEXUS_REGISTRY }}" >> .npmrc

- name: Install Dependencies from Nexus
  run: npm install


      - name: Publish to Nexus Repository
        run: |
          echo "//$(echo ${{ secrets.NEXUS_PUBLISH_REGISTRY }} | sed 's|https\?://||'):_auth=$(echo -n '${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }}' | base64)" > .npmrc
          echo "registry=${{ secrets.NEXUS_PUBLISH_REGISTRY }}" >> .npmrc
          npm publish --registry=${{ secrets.NEXUS_PUBLISH_REGISTRY }}

      - name: Run SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Optional: Quality Gate
      # - name: Check Quality Gate Status
      #   uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.SSH_HOST }}
          KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$KEY" > key.pem
          chmod 600 key.pem
          rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" ./ ec2-user@$HOST:/home/ec2-user/simple-ecommerce/
          ssh -i key.pem ec2-user@$HOST << 'EOF'
            cd ~/simple-ecommerce
            echo "//$(echo ${{ secrets.NEXUS_REGISTRY }} | sed 's|https\?://||'):_auth=$(echo -n '${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }}' | base64)" > .npmrc
            echo "registry=${{ secrets.NEXUS_REGISTRY }}" >> .npmrc
            npm install
            pm2 stop all || true
            pm2 start app.js --name ecommerce
            pm2 save
          EOF

